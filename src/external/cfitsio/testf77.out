 FITSIO TESTPROG
  
 Try opening then closing a nonexistent file: 
   ftopen iunit, status (expect an error) =  15 104
   ftclos status =  104
  
 ftinit create new file status =    0
  
 test writing of long string keywords: 
 123456789012345678901234567890123456789012345678901234567890123456789012345   
 '12345678901234567890123456789012345678901234567890123456789012345678'        
 1234567890123456789012345678901234567890123456789012345678901234'6789012345   
 '1234567890123456789012345678901234567890123456789012345678901234''67'        
 1234567890123456789012345678901234567890123456789012345678901234''789012345   
 '1234567890123456789012345678901234567890123456789012345678901234'''''        
 1234567890123456789012345678901234567890123456789012345678901234567'9012345   
 '1234567890123456789012345678901234567890123456789012345678901234567'         
 Wrote all Keywords successfully 
 ftflus status =    0
  
 HDU number =    1
 Values read back from primary array (99 = null pixel)
 The 1st, and every 4th pixel should be undefined: 
  99  2  3 99  5  6  7 99  9 10 11 99 13 14 15 99 17 18 19 99  T (ftgpvb) 
  99  2  3 99  5  6  7 99  9 10 11 99 13 14 15 99 17 18 19 99  T (ftgpvi) 
  99  2  3 99  5  6  7 99  9 10 11 99 13 14 15 99 17 18 19 99  T (ftgpvj) 
  99. 2. 3.99. 5. 6. 7.99. 9.10.11.99.13.14.15.99.17.18.19.99. T (ftgpve) 
  99. 2. 3.99. 5. 6. 7.99. 9.10.11.99.13.14.15.99.17.18.19.99. T (ftgpvd) 
   0  2  3  0  5  6  7  0  9 10 11  0 13 14 15  0 17 18 19  0  T (ftgpfb)
   0  2  3  0  5  6  7  0  9 10 11  0 13 14 15  0 17 18 19  0  T (ftgpfi)
   0  2  3  0  5  6  7  0  9 10 11  0 13 14 15  0 17 18 19  0  T (ftgpfj)
   0. 2. 3. 0. 5. 6. 7. 0. 9.10.11. 0.13.14.15. 0.17.18.19. 0. T (ftgpfe)
   0. 2. 3. 0. 5. 6. 7. 0. 9.10.11. 0.13.14.15. 0.17.18.19. 0. T (ftgpfd)
  
 Closed then reopened the FITS file 10 times.
  
 HDU number =    1
 Read back keywords: 
 simple, bitpix, naxis, naxes =    T  32   2  10   2
   pcount, gcount, extend =    0   1   T
 KEY_PREC= 'This keyword was written by fxprec' / comment goes here            
 KEY_PREC 'This keyword was written by fxprec comment goes here   
 KEY_PREC= 'This keyword was written by fxprec' / comment goes here            
 KY_PKNS1 :'first string' :fxpkns comment  
 KEY_PKYS :value_string         :fxpkys comment     0
 KEY_PKYL :   T:fxpkyl comment     0
 KEY_PKYJ :  11:fxpkyj comment     0
 KEY_PKYE :    11.00000:fxpkyj comment     0
 KEY_PKYD :    11.00000:fxpkyj comment     0
 KEY_PKYS :value_string         :fxpkys comment     0
 KEY_PKYL :   T:fxpkyl comment     0
 KEY_PKYJ :  11:fxpkyj comment     0
 KEY_PKYE :    13.13131:fxpkye comment     0
 KEY_PKYD :    15.15152:fxpkyd comment     0
 KEY_PKYF :    12.12121:fxpkyf comment     0
 KEY_PKYE :    13.13131:fxpkye comment     0
 KEY_PKYG : 14.141414141414:fxpkyg comment     0
 KEY_PKYD : 15.151515151515:fxpkyd comment     0
 KEY_PKYT  :  12345678:0.12345678901235fxpkyt comment     0
 KEY_PKYJ :  11:[km/s/Mpc] fxpkyj comment                0
 keyword unit=km/s/Mpc          
 KEY_PKYJ :  11:fxpkyj comment                           0
 keyword unit=                  
 KEY_PKYJ :  11:[feet/second/second] fxpkyj comment      0
 keyword unit=feet/second/second
 KEY_PKLS long string value = This is a very long string value that is continued
  over more than one keyword.                                          
 header contains   61 keywords; located at keyword   23
 ftgkns: first string  second string               
 ftgknl:    T   F   T
 ftgknj:   11  12  13
 ftgkne:   13.13131  14.14141  15.15152
 ftgknd:   15.15152  16.16162  17.17172
  
 Before deleting the HISTORY and DATE keywords...
 COMMENT 
 HISTORY 
 DATE    
 KY_PKNS1
  
 After deleting the keywords... 
 COMMENT This keyword was written by fxpcom.                                   
 KY_PKNS1= 'first string'       / fxpkns comment                               
  
 After inserting the keywords... 
 COMMENT   continued over multiple keywords.  The HEASARC convention uses the &
 KY_IREC = 'This keyword inserted by fxirec'                                   
 KY_IKYS = 'insert_value_string' / ikys comment                                
 KY_IKYJ =                   49 / ikyj comment                                 
 KY_IKYL =                    T / ikyl comment                                 
 KY_IKYE =           1.2346E+01 / ikye comment                                 
 KY_IKYD = 1.23456789012346E+01 / ikyd comment                                 
 KY_IKYF =              12.3456 / ikyf comment                                 
 KY_IKYG =     12.3456789012346 / ikyg comment                                 
 COMMENT   character at the end of each substring which is then continued      
  
 After modifying the keywords... 
 COMMENT   This keyword was modified by fxmrec                                 
 KY_MREC = 'This keyword was modified by fxmcrd'                               
 NEWIKYS = 'modified_string'    / ikys comment                                 
 KY_IKYJ =                   50 / This is a modified comment                   
 KY_IKYL =                    F / ikyl comment                                 
 KY_IKYE =          -1.2346E+01 / ikye comment                                 
 KY_IKYD = -1.23456789012346E+01 / modified comment                            
 KY_IKYF =             -12.3456 / ikyf comment                                 
 KY_IKYG =    -12.3456789012346 / ikyg comment                                 
 COMMENT   character at the end of each substring which is then continued      
  
 After updating the keywords... 
 COMMENT   This keyword was modified by fxmrec                                 
 KY_UCRD = 'This keyword was updated by fxucrd'                                
 NEWIKYS = 'updated_string'     / ikys comment                                 
 KY_IKYJ =                   51 / This is a modified comment                   
 KY_IKYL =                    T / ikyl comment                                 
 KY_IKYE =          -1.3346E+01 / ikye comment                                 
 KY_IKYD = -1.33456789012346E+01 / modified comment                            
 KY_IKYF =             -13.3456 / ikyf comment                                 
 KY_IKYG =    -13.3456789012346 / ikyg comment                                 
 COMMENT   character at the end of each substring which is then continued      
  
 Keywords found using wildcard search (should be 9)...
 KEY_PKYS= 'value_string'       / fxpkys comment                               
 KEY_PKYL=                    T / fxpkyl comment                               
 KEY_PKYJ=                   11 / [feet/second/second] fxpkyj comment          
 KEY_PKYF=             12.12121 / fxpkyf comment                               
 KEY_PKYE=         1.313131E+01 / fxpkye comment                               
 KEY_PKYG=    14.14141414141414 / fxpkyg comment                               
 KEY_PKYD= 1.51515151515152E+01 / fxpkyd comment                               
 NEWIKYS = 'updated_string'     / ikys comment                                 
 KEY_PKYT= 12345678.1234567890123456 / fxpkyt comment                          
  
 ftibin status =    0
 HDU number =    2
 header contains   33 keywords located at keyword    1
 header contains   33 keywords with room for   74 more
 TDIM3 = (1,2,8)                 3   1   2   8
 ftpcl_ status =    0
  
 Find the column numbers a returned status value of 237 is
 expected and indicates that more than one column name matches
 the input column name template.  Status = 219 indicates that
 there was no matching column name.
 Column Xvalue is number   3 status =   0
 Column Avalue is number   1 status =  237
 Column Lvalue is number   2 status =  237
 Column Xvalue is number   3 status =  237
 Column Bvalue is number   4 status =  237
 Column Ivalue is number   5 status =  237
 Column Jvalue is number   6 status =  237
 Column Evalue is number   7 status =  237
 Column Dvalue is number   8 status =  237
 Column Cvalue is number   9 status =  237
 Column Mvalue is number  10 status =  237
 Column        is number   0 status =  219
  
 Information about each column: 
 15A  16  15  15 Avalue       A      1.00    0.00  1234554321        
 1L   14   1   1 Lvalue m**2  L      1.00    0.00  1234554321        
 16X   1  16   1 Xvalue cm    X      1.00    0.00  1234554321        
 1B   11   1   1 Bvalue erg/s B      1.00    0.00          99        
 1I   21   1   2 Ivalue km/s  I      1.00    0.00          99        
 1J   41   1   4 Jvalue       J      1.00    0.00          99        
 1E   42   1   4 Evalue       E      1.00    0.00  1234554321        
 1D   82   1   8 Dvalue       D      1.00    0.00  1234554321        
 1C   83   1   8 Cvalue       C      1.00    0.00  1234554321        
 1M  163   1  16 Mvalue       M      1.00    0.00  1234554321        
  
 ftitab status =    0
 HDU number =    2
 ftpcl_ status =    0
  
 ASCII table: rowlen, nrows, tfields, extname: 76 11  5 Test-ASCII     
 Name      1 A15           
 Ivalue   17 I10    m**2   
 Fvalue   28 F14.6  cm     
 Evalue   43 E12.5  erg/s  
 Dvalue   56 D21.14 km/s   
  
 Data values read from ASCII table: 
 first string     1  1  1  1. 1.
 second string    2  2  2  2. 2.
                  3  3  3  3. 3.
 UNDEFINED        4  4  4  4. 4.
                  5  5  5  5. 5.
                  6  6  6  6. 6.
                  7  7  7  7. 7.
                  8  8  8  8. 8.
                  9  9  9  9. 9.
                 10 10 10 10.10.
                 99 99 99 99.99.
  
       1       1.000000  1.00000E+00  1.00000000000000E+00second string        
  
 Column name is number   1 status =    0
 Column Ivalue is number   2 status =  237
 Column Fvalue is number   3 status =  237
 Column Evalue is number   4 status =  237
 Column Dvalue is number   5 status =  237
 Column        is number   0 status =  219
 A15      16   1  15 Name     1            1.00      0.00 null1   
 I10      41   1  10 Ivalue  17 m**2       1.00      0.00 null2   
 F14.6    82   1  14 Fvalue  28 cm         1.00      0.00 null3   
 E12.5    42   1  12 Evalue  43 erg/s      1.00      0.00 null4   
 D21.14   82   1  21 Dvalue  56 km/s       1.00      0.00 null5   
  
  
 Data values after inserting 3 rows after row 2:
 first string     1  1  1  1. 1.
 second string    2  2  2  2. 2.
                  0  0  0  0. 0.
                  0  0  0  0. 0.
                  0  0  0  0. 0.
                  3  3  3  3. 3.
 UNDEFINED        4  4  4  4. 4.
                  5  5  5  5. 5.
                  6  6  6  6. 6.
                  7  7  7  7. 7.
                  8  8  8  8. 8.
                  9  9  9  9. 9.
                 10 10 10 10.10.
                 99 99 99 99.99.
  
 Data values after deleting 2 rows at row 10: 
 first string     1  1  1  1. 1.
 second string    2  2  2  2. 2.
                  0  0  0  0. 0.
                  0  0  0  0. 0.
                  0  0  0  0. 0.
                  3  3  3  3. 3.
 UNDEFINED        4  4  4  4. 4.
                  5  5  5  5. 5.
                  6  6  6  6. 6.
                  9  9  9  9. 9.
                 10 10 10 10.10.
                 99 99 99 99.99.
  
 Data values after deleting column 3: 
 first string     1  1  1. 1.
 second string    2  2  2. 2.
                  0  0  0. 0.
                  0  0  0. 0.
                  0  0  0. 0.
                  3  3  3. 3.
 UNDEFINED        4  4  4. 4.
                  5  5  5. 5.
                  6  6  6. 6.
                  9  9  9. 9.
                 10 10 10.10.
                 99 99 99.99.
  
  Data values after inserting column 5: 
 first string     1  1  1. 1. 0
 second string    2  2  2. 2. 0
                  0  0  0. 0. 0
                  0  0  0. 0. 0
                  0  0  0. 0. 0
                  3  3  3. 3. 0
 UNDEFINED        4  4  4. 4. 0
                  5  5  5. 5. 0
                  6  6  6. 6. 0
                  9  9  9. 9. 0
                 10 10 10.10. 0
                 99 99 99.99. 0
 HDU number =    3
  
 Moved to binary table
 header contains   37 keywords with room for   70 more 
  
 Binary table: nrows, tfields, extname, pcount:  21  10Test-BINTABLE     0
 Avalue         15A                           
 Lvalue         1L             m**2           
 Xvalue         16X            cm             
 Bvalue         1B             erg/s          
 Ivalue         1I             km/s           
 Jvalue         1J                            
 Evalue         1E                            
 Dvalue         1D                            
 Cvalue         1C                            
 Mvalue         1M                            
  
 Data values read from binary table: 
  Bit column (X) data values:   
 FTFFTTFF FTTTFFFF TTTTFFFF FTTTTTFF FFFFFFFF
   
 null string column value (should be blank):                              
  
 Read columns with ftgcv_: 
 first string     F  76   1   1   1   1.   1.   1.  -2.   1.  -2.
 second string    T 112   2   2   2   2.   2.   3.  -4.   3.  -4.
                  F 240   3   3   3   3.   3.   5.  -6.   5.  -6.
 NOT DEFINED      F 124   0  -4  -4  -4.  -4.   7.  -8.   7.  -8.
 NOT DEFINED      T   0   5   5   5   5.   5.   9. -10.   9. -10.
 NOT DEFINED      T   0   0  -6  -6  -6.  -6.  11. -12.  11. -12.
 NOT DEFINED      F   0   7   7   7   7.   7.  13. -14.  13. -14.
 NOT DEFINED      F   0   0  -8  -8  -8.  -8.  15. -16.  15. -16.
 NOT DEFINED      F   0   9   9   9   9.   9.  17. -18.  17. -18.
 NOT DEFINED      T   0   0 -10 -10 -10. -10.  19. -20.  19. -20.
 NOT DEFINED      F   0  98  98  98  98.  98.   0.   0.   0.   0.
 NOT DEFINED      T   0  12  12  12  12.  12.   0.   0.   0.   0.
 NOT DEFINED      F   0  98  98  98  98.  98.   0.   0.   0.   0.
 NOT DEFINED      F   0   0 -14 -14 -14. -14.   0.   0.   0.   0.
 NOT DEFINED      F   0  98  98  98  98.  98.   0.   0.   0.   0.
 NOT DEFINED      F   0   0 -16 -16 -16. -16.   0.   0.   0.   0.
 NOT DEFINED      T   0  98  98  98  98.  98.   0.   0.   0.   0.
 NOT DEFINED      T   0   0 -18 -18 -18. -18.   0.   0.   0.   0.
 NOT DEFINED      T   0  98  98  98  98.  98.   0.   0.   0.   0.
 NOT DEFINED      T   0   0 -20 -20 -20. -20.   0.   0.   0.   0.
 NOT DEFINED      F   0  98  98  98  98.  98.   0.   0.   0.   0.
  
  Read columns with ftgcf_: 
 first string     F  76   1   1   1   1.   1.   1.  -2.   1.  -2.
 second string    T 112   2   2   2   2.   2.   3.  -4.   3.  -4.
                  F 240   3   3   3   3.   3.   5.  -6.   5.  -6.
                  F 124   0  -4  -4  -4.  -4.   7.  -8.   7.  -8.
                  T   0   5   5   5   5.   5.   9. -10.   9. -10.
                  T   0   0  -6  -6  -6.  -6.  11. -12.  11. -12.
                  F   0   7   7   7   7.   7.  13. -14.  13. -14.
                  F   0   0  -8  -8  -8.  -8.  15. -16.  15. -16.
                  F   0   9   9   9   9.   9.  17. -18.  17. -18.
                  T   0   0 -10 -10 -10. -10.  19. -20.  19. -20.
                  F   0  99  99
                  T   0  12  12
                  F   0  99  99
                  F   0   0 -14
                  F   0  99  99
                  F   0   0 -16
                  T   0  99  99
                  T   0   0 -18
                  T   0  99  99
                  T   0   0 -20
                  F   0  99  99
  
 Data values after inserting 3 rows after row 2:
 first string     1   1   1   1.   1.
 second string    2   2   2   2.   2.
 NOT DEFINED      0   0   0   0.   0.
 NOT DEFINED      0   0   0   0.   0.
 NOT DEFINED      0   0   0   0.   0.
                  3   3   3   3.   3.
 NOT DEFINED      0  -4  -4  -4.  -4.
 NOT DEFINED      5   5   5   5.   5.
 NOT DEFINED      0  -6  -6  -6.  -6.
 NOT DEFINED      7   7   7   7.   7.
 NOT DEFINED      0  -8  -8  -8.  -8.
 NOT DEFINED      9   9   9   9.   9.
 NOT DEFINED      0 -10 -10 -10. -10.
 NOT DEFINED     98  98  98  98.  98.
  
 Data values after deleting 2 rows at row 10: 
 first string     1   1   1   1.   1.
 second string    2   2   2   2.   2.
 NOT DEFINED      0   0   0   0.   0.
 NOT DEFINED      0   0   0   0.   0.
 NOT DEFINED      0   0   0   0.   0.
                  3   3   3   3.   3.
 NOT DEFINED      0  -4  -4  -4.  -4.
 NOT DEFINED      5   5   5   5.   5.
 NOT DEFINED      0  -6  -6  -6.  -6.
 NOT DEFINED      9   9   9   9.   9.
 NOT DEFINED      0 -10 -10 -10. -10.
 NOT DEFINED     98  98  98  98.  98.
  
 Data values after deleting column 6: 
 first string     1   1   1.   1.
 second string    2   2   2.   2.
 NOT DEFINED      0   0   0.   0.
 NOT DEFINED      0   0   0.   0.
 NOT DEFINED      0   0   0.   0.
                  3   3   3.   3.
 NOT DEFINED      0  -4  -4.  -4.
 NOT DEFINED      5   5   5.   5.
 NOT DEFINED      0  -6  -6.  -6.
 NOT DEFINED      9   9   9.   9.
 NOT DEFINED      0 -10 -10. -10.
 NOT DEFINED     98  98  98.  98.
  
 Data values after inserting column 8: 
 first string     1   1   1.   1.  0
 second string    2   2   2.   2.  0
 NOT DEFINED      0   0   0.   0.  0
 NOT DEFINED      0   0   0.   0.  0
 NOT DEFINED      0   0   0.   0.  0
                  3   3   3.   3.  0
 NOT DEFINED      0  -4  -4.  -4.  0
 NOT DEFINED      5   5   5.   5.  0
 NOT DEFINED      0  -6  -6.  -6.  0
 NOT DEFINED      9   9   9.   9.  0
 NOT DEFINED      0 -10 -10. -10.  0
 NOT DEFINED     98  98  98.  98.  0
  
 Values after setting 1st 10 elements in column 8 = null: 
 first string     1   1   1.   1. 98
 second string    2   2   2.   2. 98
 NOT DEFINED      0   0   0.   0. 98
 NOT DEFINED      0   0   0.   0. 98
 NOT DEFINED      0   0   0.   0. 98
                  3   3   3.   3. 98
 NOT DEFINED      0  -4  -4.  -4. 98
 NOT DEFINED      5   5   5.   5. 98
 NOT DEFINED      0  -6  -6.  -6. 98
 NOT DEFINED      9   9   9.   9. 98
 NOT DEFINED      0 -10 -10. -10.  0
 NOT DEFINED     98  98  98.  98.  0
  
 ftibin status =    0
 HDU number =    2
      0  1000 10000 33000 66000  -999
      0  1000 10000 32768 65535  -999
      0  1000 10000 32800 65500  -999
  
      0     1    10    33    66  -999
 -32768-31768-22768     0 32767  -999
     -1     9    99   327   654  -999
  
  Create image extension: ftiimg status =    0
 HDU number =    3
  
 Wrote whole 2D array: ftp2di status =   0
  
 Read whole 2D array: ftg2di status =   0
    0   1   2   3   4   5   6   7   8   9  10  11  12  13  14   0   0   0   0
   10  11  12  13  14  15  16  17  18  19  20  21  22  23  24   0   0   0   0
   20  21  22  23  24  25  26  27  28  29  30  31  32  33  34   0   0   0   0
   30  31  32  33  34  35  36  37  38  39  40  41  42  43  44   0   0   0   0
   40  41  42  43  44  45  46  47  48  49  50  51  52  53  54   0   0   0   0
   50  51  52  53  54  55  56  57  58  59  60  61  62  63  64   0   0   0   0
   60  61  62  63  64  65  66  67  68  69  70  71  72  73  74   0   0   0   0
   70  71  72  73  74  75  76  77  78  79  80  81  82  83  84   0   0   0   0
   80  81  82  83  84  85  86  87  88  89  90  91  92  93  94   0   0   0   0
   90  91  92  93  94  95  96  97  98  99 100 101 102 103 104   0   0   0   0
  100 101 102 103 104 105 106 107 108 109 110 111 112 113 114   0   0   0   0
  110 111 112 113 114 115 116 117 118 119 120 121 122 123 124   0   0   0   0
  120 121 122 123 124 125 126 127 128 129 130 131 132 133 134   0   0   0   0
  130 131 132 133 134 135 136 137 138 139 140 141 142 143 144   0   0   0   0
  140 141 142 143 144 145 146 147 148 149 150 151 152 153 154   0   0   0   0
  150 151 152 153 154 155 156 157 158 159 160 161 162 163 164   0   0   0   0
  160 161 162 163 164 165 166 167 168 169 170 171 172 173 174   0   0   0   0
  170 171 172 173 174 175 176 177 178 179 180 181 182 183 184   0   0   0   0
  180 181 182 183 184 185 186 187 188 189 190 191 192 193 194   0   0   0   0
  190 191 192 193 194 195 196 197 198 199 200 201 202 203 204   0   0   0   0
  200 201 202 203 204 205 206 207 208 209 210 211 212 213 214   0   0   0   0
  210 211 212 213 214 215 216 217 218 219 220 221 222 223 224   0   0   0   0
  220 221 222 223 224 225 226 227 228 229 230 231 232 233 234   0   0   0   0
  230 231 232 233 234 235 236 237 238 239 240 241 242 243 244   0   0   0   0
  240 241 242 243 244 245 246 247 248 249 250 251 252 253 254   0   0   0   0
    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
  
  
 Wrote subset 2D array: ftpssi status =   0
  
 Read whole 2D array: ftg2di status =   0
    0   1   2   3   4   5   6   7   8   9  10  11  12  13  14   0   0   0   0
   10  11  12  13  14  15  16  17  18  19  20  21  22  23  24   0   0   0   0
   20  21  22  23  24  25  26  27  28  29  30  31  32  33  34   0   0   0   0
   30  31  32  33  34  35  36  37  38  39  40  41  42  43  44   0   0   0   0
   40  41  42  43   0  -1  -2  -3  -4  -5  -6  -7  -8  -9  54   0   0   0   0
   50  51  52  53 -10 -11 -12 -13 -14 -15 -16 -17 -18 -19  64   0   0   0   0
   60  61  62  63 -20 -21 -22 -23 -24 -25 -26 -27 -28 -29  74   0   0   0   0
   70  71  72  73 -30 -31 -32 -33 -34 -35 -36 -37 -38 -39  84   0   0   0   0
   80  81  82  83 -40 -41 -42 -43 -44 -45 -46 -47 -48 -49  94   0   0   0   0
   90  91  92  93 -50 -51 -52 -53 -54 -55 -56 -57 -58 -59 104   0   0   0   0
  100 101 102 103 -60 -61 -62 -63 -64 -65 -66 -67 -68 -69 114   0   0   0   0
  110 111 112 113 -70 -71 -72 -73 -74 -75 -76 -77 -78 -79 124   0   0   0   0
  120 121 122 123 -80 -81 -82 -83 -84 -85 -86 -87 -88 -89 134   0   0   0   0
  130 131 132 133 -90 -91 -92 -93 -94 -95 -96 -97 -98 -99 144   0   0   0   0
  140 141 142 143 144 145 146 147 148 149 150 151 152 153 154   0   0   0   0
  150 151 152 153 154 155 156 157 158 159 160 161 162 163 164   0   0   0   0
  160 161 162 163 164 165 166 167 168 169 170 171 172 173 174   0   0   0   0
  170 171 172 173 174 175 176 177 178 179 180 181 182 183 184   0   0   0   0
  180 181 182 183 184 185 186 187 188 189 190 191 192 193 194   0   0   0   0
  190 191 192 193 194 195 196 197 198 199 200 201 202 203 204   0   0   0   0
  200 201 202 203 204 205 206 207 208 209 210 211 212 213 214   0   0   0   0
  210 211 212 213 214 215 216 217 218 219 220 221 222 223 224   0   0   0   0
  220 221 222 223 224 225 226 227 228 229 230 231 232 233 234   0   0   0   0
  230 231 232 233 234 235 236 237 238 239 240 241 242 243 244   0   0   0   0
  240 241 242 243 244 245 246 247 248 249 250 251 252 253 254   0   0   0   0
    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
    0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
  
  
 Read subset of 2D array: ftgsvi status =    0
    41   43   -1   -3   -5   71   73  -31  -33  -35
  
 Create image extension: ftiimg status =   0
 HDU number =    4
 Create temporary file: ftinit status =    0
 Copy image extension to primary array of tmp file.
 ftcopy status =    0
 SIMPLE  =                    T / file does conform to FITS standard           
 BITPIX  =                   16 / number of bits per data pixel                
 NAXIS   =                    2 / number of data axes                          
 NAXIS1  =                   15 / length of data axis 1                        
 NAXIS2  =                   25 / length of data axis 2                        
 EXTEND  =                    T / FITS dataset may contain extensions          
 Delete the tmp file: ftdelt status =   0
 Delete the image extension hdutype, status =   1   0
 HDU number =    4
 ftcrhd status =    0
 Variable length arrays: ftphbn status =   0
 ftpcl_ status =    0
 PCOUNT = 4446
 HDU number =    6
 A                                   0
 L  0  F
 X  0  F
 B  1  0
 I  1  0
 J  1  0
 E  1. 0.
 D  1. 0.
 Column 8 repeat and offset =    1   14
 A  ab                               0
 L  0  F  T
 X  0  F  T
 B 99  2  0
 I 99  2  0
 J 99  2  0
 E 99. 2. 0.
 D 99. 2. 0.
 Column 8 repeat and offset =    2   49
 A  abc                              0
 L  0  F  F  F
 X  0  F  T  F
 B  1 99  3  0
 I  1 99  3  0
 J  1 99  3  0
 E  1.99. 3. 0.
 D  1.99. 3. 0.
 Column 8 repeat and offset =    3  105
 A  abcd                             0
 L  0  F  T  F  F
 X  0  F  T  F  F
 B  1  2 99  4  0
 I  1  2 99  4  0
 J  1  2 99  4  0
 E  1. 2.99. 4. 0.
 D  1. 2.99. 4. 0.
 Column 8 repeat and offset =    4  182
 A  abcde                            0
 L  0  F  T  F  F  T
 X  0  F  T  F  F  T
 B  1  2  3 99  5  0
 I  1  2  3 99  5  0
 J  1  2  3 99  5  0
 E  1. 2. 3.99. 5. 0.
 D  1. 2. 3.99. 5. 0.
 Column 8 repeat and offset =    5  280
 A  abcdef                           0
 L  0  F  T  F  F  F  T
 X  0  F  T  F  F  T  T
 B  1  2  3  4 99  6  0
 I  1  2  3  4 99  6  0
 J  1  2  3  4 99  6  0
 E  1. 2. 3. 4.99. 6. 0.
 D  1. 2. 3. 4.99. 6. 0.
 Column 8 repeat and offset =    6  399
 A  abcdefg                          0
 L  0  F  T  F  F  T  F  F
 X  0  F  T  F  F  T  T  F
 B  1  2  3  4  5 99  7  0
 I  1  2  3  4  5 99  7  0
 J  1  2  3  4  5 99  7  0
 E  1. 2. 3. 4. 5.99. 7. 0.
 D  1. 2. 3. 4. 5.99. 7. 0.
 Column 8 repeat and offset =    7  539
 A  abcdefgh                         0
 L  0  F  T  F  F  T  T  F  F
 X  0  F  T  F  F  T  T  F  F
 B  1  2  3  4  5  6 99  8  0
 I  1  2  3  4  5  6 99  8  0
 J  1  2  3  4  5  6 99  8  0
 E  1. 2. 3. 4. 5. 6.99. 8. 0.
 D  1. 2. 3. 4. 5. 6.99. 8. 0.
 Column 8 repeat and offset =    8  700
 A  abcdefghi                        0
 L  0  F  T  F  F  T  T  F  F  F
 X  0  F  T  F  F  T  T  F  F  F
 B  1  2  3  4  5  6  7 99  9  0
 I  1  2  3  4  5  6  7 99  9  0
 J  1  2  3  4  5  6  7 99  9  0
 E  1. 2. 3. 4. 5. 6. 7.99. 9. 0.
 D  1. 2. 3. 4. 5. 6. 7.99. 9. 0.
 Column 8 repeat and offset =    9  883
 A  abcdefghij                       0
 L  0  F  T  F  F  T  T  F  F  F  T
 X  0  F  T  F  F  T  T  F  F  F  T
 B  1  2  3  4  5  6  7  8 99 10  0
 I  1  2  3  4  5  6  7  8 99 10  0
 J  1  2  3  4  5  6  7  8 99 10  0
 E  1. 2. 3. 4. 5. 6. 7. 8.99.10. 0.
 D  1. 2. 3. 4. 5. 6. 7. 8.99.10. 0.
 Column 8 repeat and offset =   10 1087
 A  abcdefghijk                      0
 L  0  F  T  F  F  T  T  F  F  F  F  T
 X  0  F  T  F  F  T  T  F  F  F  T  T
 B  1  2  3  4  5  6  7  8  9 99 11  0
 I  1  2  3  4  5  6  7  8  9 99 11  0
 J  1  2  3  4  5  6  7  8  9 99 11  0
 E  1. 2. 3. 4. 5. 6. 7. 8. 9.99.11. 0.
 D  1. 2. 3. 4. 5. 6. 7. 8. 9.99.11. 0.
 Column 8 repeat and offset =   11 1312
 A  abcdefghijkl                     0
 L  0  F  T  F  F  T  T  F  F  F  T  F  T
 X  0  F  T  F  F  T  T  F  F  F  T  T  T
 B  1  2  3  4  5  6  7  8  9 10 99 12  0
 I  1  2  3  4  5  6  7  8  9 10 99 12  0
 J  1  2  3  4  5  6  7  8  9 10 99 12  0
 E  1. 2. 3. 4. 5. 6. 7. 8. 9.10.99.12. 0.
 D  1. 2. 3. 4. 5. 6. 7. 8. 9.10.99.12. 0.
 Column 8 repeat and offset =   12 1558
 A  abcdefghijklm                    0
 L  0  F  T  F  F  T  T  F  F  F  T  T  F  F
 X  0  F  T  F  F  T  T  F  F  F  T  T  T  F
 B  1  2  3  4  5  6  7  8  9 10 11 99 13  0
 I  1  2  3  4  5  6  7  8  9 10 11 99 13  0
 J  1  2  3  4  5  6  7  8  9 10 11 99 13  0
 E  1. 2. 3. 4. 5. 6. 7. 8. 9.10.11.99.13. 0.
 D  1. 2. 3. 4. 5. 6. 7. 8. 9.10.11.99.13. 0.
 Column 8 repeat and offset =   13 1825
 A  abcdefghijklmn                   0
 L  0  F  T  F  F  T  T  F  F  F  T  T  T  F  F
 X  0  F  T  F  F  T  T  F  F  F  T  T  T  F  F
 B  1  2  3  4  5  6  7  8  9 10 11 12 99 14  0
 I  1  2  3  4  5  6  7  8  9 10 11 12 99 14  0
 J  1  2  3  4  5  6  7  8  9 10 11 12 99 14  0
 E  1. 2. 3. 4. 5. 6. 7. 8. 9.10.11.12.99.14. 0.
 D  1. 2. 3. 4. 5. 6. 7. 8. 9.10.11.12.99.14. 0.
 Column 8 repeat and offset =   14 2113
 A  abcdefghijklmno                  0
 L  0  F  T  F  F  T  T  F  F  F  T  T  T  F  F  F
 X  0  F  T  F  F  T  T  F  F  F  T  T  T  F  F  F
 B  1  2  3  4  5  6  7  8  9 10 11 12 13 99 15  0
 I  1  2  3  4  5  6  7  8  9 10 11 12 13 99 15  0
 J  1  2  3  4  5  6  7  8  9 10 11 12 13 99 15  0
 E  1. 2. 3. 4. 5. 6. 7. 8. 9.10.11.12.13.99.15. 0.
 D  1. 2. 3. 4. 5. 6. 7. 8. 9.10.11.12.13.99.15. 0.
 Column 8 repeat and offset =   15 2422
 A  abcdefghijklmnop                 0
 L  0  F  T  F  F  T  T  F  F  F  T  T  T  F  F  F  F
 X  0  F  T  F  F  T  T  F  F  F  T  T  T  F  F  F  F
 B  1  2  3  4  5  6  7  8  9 10 11 12 13 14 99 16  0
 I  1  2  3  4  5  6  7  8  9 10 11 12 13 14 99 16  0
 J  1  2  3  4  5  6  7  8  9 10 11 12 13 14 99 16  0
 E  1. 2. 3. 4. 5. 6. 7. 8. 9.10.11.12.13.14.99.16. 0.
 D  1. 2. 3. 4. 5. 6. 7. 8. 9.10.11.12.13.14.99.16. 0.
 Column 8 repeat and offset =   16 2752
 A  abcdefghijklmnopq                0
 L  0  F  T  F  F  T  T  F  F  F  T  T  T  F  F  F  F  T
 X  0  F  T  F  F  T  T  F  F  F  T  T  T  F  F  F  F  T
 B  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 99 17  0
 I  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 99 17  0
 J  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 99 17  0
 E  1. 2. 3. 4. 5. 6. 7. 8. 9.10.11.12.13.14.15.99.17. 0.
 D  1. 2. 3. 4. 5. 6. 7. 8. 9.10.11.12.13.14.15.99.17. 0.
 Column 8 repeat and offset =   17 3104
 A  abcdefghijklmnopqr               0
 L  0  F  T  F  F  T  T  F  F  F  T  T  T  F  F  F  F  F  T
 X  0  F  T  F  F  T  T  F  F  F  T  T  T  F  F  F  F  T  T
 B  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 99 18  0
 I  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 99 18  0
 J  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 99 18  0
 E  1. 2. 3. 4. 5. 6. 7. 8. 9.10.11.12.13.14.15.16.99.18. 0.
 D  1. 2. 3. 4. 5. 6. 7. 8. 9.10.11.12.13.14.15.16.99.18. 0.
 Column 8 repeat and offset =   18 3477
 A  abcdefghijklmnopqrs              0
 L  0  F  T  F  F  T  T  F  F  F  T  T  T  F  F  F  F  T  F  T
 X  0  F  T  F  F  T  T  F  F  F  T  T  T  F  F  F  F  T  T  T
 B  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 99 19  0
 I  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 99 19  0
 J  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 99 19  0
 E  1. 2. 3. 4. 5. 6. 7. 8. 9.10.11.12.13.14.15.16.17.99.19. 0.
 D  1. 2. 3. 4. 5. 6. 7. 8. 9.10.11.12.13.14.15.16.17.99.19. 0.
 Column 8 repeat and offset =   19 3871
 A  abcdefghijklmnopqrst             0
 L  0  F  T  F  F  T  T  F  F  F  T  T  T  F  F  F  F  T  T  F  T
 X  0  F  T  F  F  T  T  F  F  F  T  T  T  F  F  F  F  T  T  T  T
 B  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 99 20  0
 I  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 99 20  0
 J  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 99 20  0
 E  1. 2. 3. 4. 5. 6. 7. 8. 9.10.11.12.13.14.15.16.17.18.99.20. 0.
 D  1. 2. 3. 4. 5. 6. 7. 8. 9.10.11.12.13.14.15.16.17.18.99.20. 0.
 Column 8 repeat and offset =   20 4286
  
 Create image extension: ftiimg status =   0
 ftppr status =    0
  
 Image values written with ftppr and read with ftgpv:
   0  2  4  6  8 10 12 14 16 18 20 22 24 26  F (byte)
   0  2  4  6  8 10 12 14 16 18 20 22 24 26  F (short)
   0  2  4  6  8 10 12 14 16 18 20 22 24 26  F (int)
   0  2  4  6  8 10 12 14 16 18 20 22 24 26  F (long)
   0. 2. 4. 6. 8.10.12.14.16.18.20.22.24.26. F (float)
   0. 2. 4. 6. 8.10.12.14.16.18.20.22.24.26. F (double)
  
 Wrote WCS keywords status =   0
 Read WCS keywords with ftgics status =   0
   CRVAL1, CRVAL2 =  45.830  63.570
   CRPIX1, CRPIX2 = 256.000 257.000
   CDELT1, CDELT2 = -0.00277777  0.00277777
   Rotation =   0.000 CTYPE =-TAN    
 Calculated sky coord. with ftwldp status =   0
  Pixels (  0.500000  0.500000) --> ( 47.385204 62.848968) Sky
 Calculated pixel coord. with ftxypx status =   0
  Sky ( 47.385204 62.848968) --> (  0.500000  0.500000) Pixels
  
 ftitab status =    0
 ftpcl status =    0
 Column values written with ftpcl and read with ftgcl: 
   0  3  6  9 12 15 18 21 24 27  F (byte) 
   0  3  6  9 12 15 18 21 24 27  F (short) 
   0  3  6  9 12 15 18 21 24 27  F (int) 
   0  3  6  9 12 15 18 21 24 27  F (long) 
   0. 3. 6. 9.12.15.18.21.24.27. F (float) 
   0. 3. 6. 9.12.15.18.21.24.27. F (double) 
  
 Repeatedly move to the 1st 4 HDUs of the file: 
  
 Encode checksum:  1234567890.0 -> dCW2fBU0dBU0dBU0 
 Decode checksum: dCW2fBU0dBU0dBU0  ->  1234567890.0
 DATASUM = '2338390162'
 ftgcks data checksum, status =  2338390162.0   0
 ftvcks datastatus, hdustatus, status =     1   1   0
 ftupck status =    0
 DATASUM = '2338390162'
 ftvcks datastatus, hdustatus, status =     1   1   0
 ftclos status =    0
  
 Normally, there should be 8 error messages on the
 stack all regarding 'numerical overflows':
 Numerical overflow during type conversion while writing FITS data.         
 Numerical overflow during type conversion while writing FITS data.         
 Numerical overflow during type conversion while writing FITS data.         
 Numerical overflow during type conversion while writing FITS data.         
 Numerical overflow during type conversion while writing FITS data.         
 Numerical overflow during type conversion while writing FITS data.         
 Numerical overflow during type conversion while writing FITS data.         
 Numerical overflow during type conversion while writing FITS data.         
  
 Status =   0: OK - no error                                     
