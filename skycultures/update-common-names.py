#!/usr/bin/python3

# Stellarium
# Copyright (C) 2025 - Stellarium Labs SRL
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Suite 500, Boston, MA  02110-1335, USA.

# Script that updates sky cultures data from official github project

import os
import re
import sys
import json
import polib
import shutil
import zipfile
import tempfile
import argparse

if sys.version_info[0] < 3:
    raise Exception("Please use Python 3 (current is {})".format(
        sys.version_info[0]))

if os.path.dirname(os.path.relpath(__file__)) != 'skycultures':
    print("This script must be run from the skycultures/ directory", file=sys.stderr)
    sys.exit(-1)

DIR = os.path.abspath(os.path.dirname(__file__))

parser = argparse.ArgumentParser()
parser.add_argument("--file", help="path to common_names.tab file")
args = parser.parse_args()

if not args.file:
    print("Not input file specified", file=sys.stderr)
    sys.exit(-1)

star_names = open(os.path.join(DIR, 'common_star_names.fab'), 'w')
print("# This file was generated by update-common-names.py", file=star_names)
comment_re = re.compile(r"^\s*#.*|^\s*$")
star_hip_re = re.compile(r"^\s*HIP\s*([0-9]+)\s*$")
line_num = 0
with open(args.file, 'r') as file:
    for line in file:
        line_num += 1
        if comment_re.search(line):
            continue
        items = line.split('|')
        if len(items) < 4:
            print(f"Too few entries ({len(items)}) on line {line_num}:\n{line}", file=sys.stderr)
            continue
        model = items[3].strip()
        id = items[0]
        name = items[1].strip()
        if model == 'star':
            match = star_hip_re.search(id)
            if not match:
                print(f'Failed to parse star id: "{id}"', file=sys.stderr)
                continue
            id = match.group(1)
            print(f'{id: >6}|_("{name}")', file=star_names)
