env:
  global:
   - secure: "nDBuoowqSmcjCOsK4uXfkRRGuvcLt434lXeZIND/bfOEDgOv7h62w5h4i3ebSgItWkBStLzGB8Owfb2v/S0jC+wSIoP+SD2wRg12LA0/eeb3OBYw/TR5FlCVx21/GzvODTNi8NdWb92AcYGhbLNPqMDIFHGscARjHiP2EnONhTs="

language: cpp

git:
  depth: 1
  quiet: true

matrix:
  include:
    - os: linux
      dist: trusty
      sudo: required
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.8
            - ca-certificates
          update:
            - true
        coverity_scan:
          project:
            name: "Stellarium/stellarium"
            description: "A realistic, real-time 3D simulation of the night sky."
          build_command_prepend: cov-configure --comptype gcc --compiler gcc-4.8 --template && cmake -DENABLE_TESTING=1 ..
          build_command: make -j5
          branch_pattern: coverity_scan
          notification_email: stellarium@googlegroups.com
      env:
         - MATRIX_EVAL="CC=gcc-4.8 && CXX=g++-4.8"
         - TRANSLATE=true
         - COVERAGE=false

    - os: linux
      dist: trusty
      sudo: required
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.9
          update:
            - true
      env:
         - MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"
         - TRANSLATE=false

    - os: linux
      dist: trusty
      sudo: required
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
          update:
            - true
      env:
         - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"
         - TRANSLATE=false
         - COVERAGE=false

    - os: linux
      dist: trusty
      sudo: required
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
          update:
            - true
      env:
        - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"
        - TRANSLATE=false
        - COVERAGE=false

    - os: linux
      dist: trusty
      sudo: required
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
            - lcov
          update:
            - true
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
        - TRANSLATE=false
        - COVERAGE=true

    - os: linux
      dist: trusty
      sudo: required
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.6
          packages:
            - clang-3.6
          update:
            - true
      env:
        - MATRIX_EVAL="CC=clang-3.6 && CXX=clang++-3.6"
        - TRANSLATE=false
        - COVERAGE=false

    - os: linux
      dist: trusty
      sudo: required
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.7
          packages:
            - clang-3.7
          update:
            - true
      env:
        - MATRIX_EVAL="CC=clang-3.7 && CXX=clang++-3.7"
        - TRANSLATE=false
        - COVERAGE=false

    - os: linux
      dist: trusty
      sudo: required
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.8
          packages:
            - clang-3.8
          update:
            - true
      env:
        - MATRIX_EVAL="CC=clang-3.8 && CXX=clang++-3.8"
        - TRANSLATE=false
        - COVERAGE=false

    - os: linux
      dist: trusty
      sudo: required
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-3.9
          packages:
            - clang-3.9
          update:
            - true
      env:
        - MATRIX_EVAL="CC=clang-3.9 && CXX=clang++-3.9"
        - TRANSLATE=false
        - COVERAGE=false

    - os: linux
      dist: trusty
      sudo: required
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-4.0
          packages:
            - clang-4.0
          update:
            - true
      env:
        - MATRIX_EVAL="CC=clang-4.0 && CXX=clang++-4.0"
        - TRANSLATE=false
        - COVERAGE=false

    - os: linux
      dist: trusty
      sudo: required
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-5.0
          packages:
            - clang-5.0
          update:
            - true
      env:
        - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"
        - TRANSLATE=false
        - COVERAGE=false

    - os: osx
      osx_image: xcode8.3
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++"
        - TRANSLATE=false
        - COVERAGE=false

    - os: osx
      osx_image: xcode9.2
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++"
        - TRANSLATE=false
        - COVERAGE=false

    - os: osx
      osx_image: xcode9.4
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++"
        - TRANSLATE=false
        - COVERAGE=false

    - os: osx
      osx_image: xcode10.1
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++"
        - TRANSLATE=false
        - COVERAGE=false

    - os: osx
      osx_image: xcode10.2
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++"
        - TRANSLATE=false
        - COVERAGE=false

    - os: osx
      osx_image: xcode11
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++"
        - TRANSLATE=false
        - COVERAGE=false

before_install:
  - eval "${MATRIX_EVAL}"
  # Linux
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      mkdir qt5;
      wget -q -O qt5.zip https://github.com/Stellarium/stellarium-data/releases/download/qt-5.6/qt5.zip;
      unzip -qq qt5.zip -d qt5;
      export PATH=`pwd`/qt5/bin:$PATH;
      export QT_PLUGIN_PATH=`pwd`/qt5/plugins;
      export PYTHONWARNINGS="ignore:A true SSLContext object is not available,ignore:An HTTPS request has been made";
    fi
  # Mac OS X
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      brew update > /dev/null;
      brew upgrade > /dev/null;
      brew install qt;
      export PATH="/usr/local/opt/qt/bin:$PATH";
    fi
  # ... + Coverage
  - if [[ "$COVERAGE" == true ]]; then
      pip install --user cpp-coveralls;
      gem install coveralls-lcov;
    fi

install:

before_script:
  - export DISPLAY=:99.0
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sh -e /etc/init.d/xvfb start ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then ( sudo Xvfb :99 -ac -screen 0 1024x768x8; echo ok )& fi
  - sleep 3 # give xvfb some time to start
  - mkdir build
  - cd build

script:
  - cmake -DENABLE_TESTING=1 ..
  - make -j5
  - ctest --output-on-failure
  - if [[ "$COVERAGE" == true ]]; then
      make coverage;
    fi

after_success:
  - if [[ "$TRANSLATE" == true && "$TRAVIS_BRANCH" == "master" && "$TRAVIS_PULL_REQUEST" == false && "$TRAVIS_REPO_SLUG" == "Stellarium/stellarium" ]]; then
      pip install --user urllib3==1.23 transifex-client;
      sudo echo $'[https://www.transifex.com]\nhostname = https://www.transifex.com\nusername = '"$TRANSIFEX_USER"$'\npassword = '"$TRANSIFEX_PASSWORD"$'\ntoken = '"$TRANSIFEX_API_TOKEN"$'\n' > ~/.transifexrc;
      tx push -s;
    fi
  - if [[ "$COVERAGE" == true ]]; then
      lcov --gcov-tool "/usr/bin/gcov-7" --remove coverage.info '*_autogen/*' '*/ui_*.h' '*/qrc_*.cpp' '*/qt5/*' '/usr/*' '*gmock*' --output-file coverage.info;
      coveralls-lcov coverage.info;
    fi

notifications:
  email:
    recipients:
      - mcardinot@gmail.com
      - alex.v.wolf@gmail.com
    on_success: change
    on_failure: always
  irc:
    channels:
      - "irc.freenode.net#stellarium"
    template:
      - "Stellarium/master #%{build_number} (%{author}): %{message}"
      - "Change view : %{compare_url}"
      - "Build details : %{build_url}"
